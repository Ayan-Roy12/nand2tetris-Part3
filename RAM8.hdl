// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    //feedback Mux to register inputs
    Mux16(a=RegOutToMux, b=in, sel=load, out=ToRegs);

    // register decode
    Decoder3Bits(address=address, a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7);

    //bank of 8 registers 
    Register(in=ToRegs, load=reg0, out=Reg0out);
    Register(in=ToRegs, load=reg1, out=Reg1out);
    Register(in=ToRegs, load=reg2, out=Reg2out);
    Register(in=ToRegs, load=reg3, out=Reg3out);
    Register(in=ToRegs, load=reg4, out=Reg4out);
    Register(in=ToRegs, load=reg5, out=Reg5out);
    Register(in=ToRegs, load=reg6, out=Reg6out);
    Register(in=ToRegs, load=reg7, out=Reg7out);

    Mux8Way16(a=Reg0out, b=Reg1out, c=Reg2out, d=Reg3out, e=Reg4out, f=Reg5out, g=Reg6out, h=Reg7out, sel=address, out=RegOutToMux, out=out);
}